{
	".source.lucy": {
		"single import": {
			"prefix": "im",
			"body": "import \"${1:package}\"",
			"description": "Snippet for import statement"
		},
		"single constant": {
			"prefix": "co",
			"body": "const ${1:name} = ${2:value}",
			"description": "Snippet for a constant"
		},
		"function declaration": {
			"prefix": "fn",
			"body": "fn $1($2) $3 {\n\t$0\n}",
			"description": "Snippet for function declaration"
		},
		"variable declaration": {
			"prefix": "var",
			"body": "var ${1:name} ${2:type}",
			"description": "Snippet for a variable"
		},
		"switch statement": {
			"prefix": "switch",
			"body": "switch ${1:expression} {\ncase ${2:condition}:\n\t$0\n}",
			"description": "Snippet for switch statement"
        },
        "when statement": {
			"prefix": "when",
			"body": "switch ${1:expression} {\ncase ${2:condition}:\n\t$0\n}",
			"description": "Snippet for switch statement"
        },
		"case clause": {
			"prefix": "cs",
			"body": "case ${1:condition}:$0",
			"description": "Snippet for case clause"
		},
		"for statement": {
			"prefix": "for",
			"body": "for ${1:index} := 0; $1 < ${2:count}; $1${3:++} {\n\t$0\n}",
			"description": "Snippet for a for loop"
		},
		"for range statement": {
			"prefix": "forr",
			"body": "for ${1:_, }${2:var} := range ${3:var} {\n\t$0\n}",
			"description": "Snippet for a for range loop"
		},
		"if statement": {
			"prefix": "if",
			"body": "if ${1:condition} {\n\t$0\n}",
			"description": "Snippet for if statement"
		},
		"else branch": {
			"prefix": "el",
			"body": "else {\n\t$0\n}",
			"description": "Snippet for else branch"
		},
		"if else statement": {
			"prefix": "ie",
			"body": "if ${1:condition} {\n\t$2\n} else {\n\t$0\n}",
			"description": "Snippet for if else"
		},
		"print": {
			"prefix": "pr",
			"body": "print(\"$1\")",
			"description": "Snippet for print"
		},
		"printf": {
			"prefix": "prf",
			"body": "printf(\"$1\", ${2:var})",
			"description": "Snippet for printf"
		},
		"new(...)": {
			"prefix": "new",
			"body": "new ${1:type}()",
			"description": "Snippet for new statement"
		},
		"panic(...)": {
			"prefix": "pn",
			"body": "panic(\"$0\")",
			"description": "Snippet for panic"
		},
		"main function": {
			"prefix": "fmain",
			"body": "fn main(args []string) {\n\t$1\n}",
			"description": "Snippet for main function"
		}
	}
}
